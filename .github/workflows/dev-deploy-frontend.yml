name: Deploy frontend on push/merge

# Only trigger on PR/push and only for frontend files
on:
  # Trigger on PR close
  pull_request:
    types: [ closed ]
    paths:
      - '.firebaserc'
      - '*.json'
      - '*.js'
      - 'src/**'
      - '.github/workflows/dev-deploy-frontend.yml'
    branches:
      - development
  
  # Trigger on push to master (edge case, local merge)
  push:
    branches:
      - development
    paths:
      - '*.json'
      - '*.js'
      - 'src/**'
      - '.github/workflows/dev-deploy-frontend.yml'

jobs:
  # Build the frontend giles
  build:
    name: Deploy frontend

    runs-on: ubuntu-latest

    steps:

      # Environment and dependency setup
      - name: Cloning repository
        uses: actions/checkout@v1
      - name: Checkout development
        run: git checkout development
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Set Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install dependencies
        run: npm i
      - name: Create environment files
        run: |
          echo -e "${{ secrets.DOTENV_DEVELOPMENT }}" > .env

      # Testing
      - name: Run e2e tests
        run: npm run test:ci
      - name: Testing failed
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          path: cypress/videos # or path/to/artifact

      # Deployment
      - name: Build website files
        env:
          NODE_ENV: production
          CI: false
        run: npm run build
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting,firestore --project=development
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      # Notify Mentor
      - name: Send push notification
        env:
          MSG_TITLE: "Success: Development POAP QR Kiosk"
          MSG_CONTENT: "frontend CI success"
        run: curl -f -X POST -d "token=${{ secrets.PUSHOVER_TOKEN }}&user=${{ secrets.PUSHOVER_USER }}&title=$MSG_TITLE&message=$MSG_CONTENT&priority=1" https://api.pushover.net/1/messages.json
        
      - name: Send failure push notification
        if: ${{ failure() }}
        env:
          MSG_TITLE: "Failure: Development POAP QR Kiosk"
          MSG_CONTENT: "frontend CI failed"
        run: curl -f -X POST -d "token=${{ secrets.PUSHOVER_TOKEN }}&user=${{ secrets.PUSHOVER_USER }}&title=$MSG_TITLE&message=$MSG_CONTENT&priority=1" https://api.pushover.net/1/messages.json
        